{"version":3,"sources":["redux/actions/updateArray.js","algorithms/helpers/randomizer.js","redux/reducers/array/index.js","redux/actions/updateRunning.js","algorithms/helpers/defaults.js","redux/reducers/bubbleSort/index.js","redux/actions/bubbleSort/index.js","redux/reducers/delay/index.js","redux/actions/delay.js","redux/reducers/rootReducer.js","redux/store.js","algorithms/helpers/delayer.js","algorithms/sortingAlgos/bubbleSort.js","components/ControlWindow.jsx","components/DisplayWindow.jsx","components/MainComponent.jsx","index.js"],"names":["updateArray","payload","type","randomizer","length","Array","fill","map","element","Math","floor","random","defaultState","arr","isAlgoRunning","arrayReducer","state","action","console","log","defaultDelay","Number","compareCandle","compareCandleOk","compareCandleNotOk","sortedCandle","bubbleReducer","Object","assign","delayReducer","rootReducer","combineReducers","store","createStore","delay","delayInms","Promise","resolve","setTimeout","bubbleSort","updateRunning","delay_time","array","dispatch","a","newArr","i","no_swap","j","e","ControlWindow","props","len","randomizeHandler","bind","arrayLengthHandler","sortClickHandler","delayHandler","this","updateArr","event","newLength","target","value","setState","newDelay","updateDelay","sort","className","min","max","defaultValue","onChange","onClick","disabled","Component","connect","DisplayWindow","color","indx","candleArr","s","height","width","backgroundColor","style","key","MainComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7ff350.chunk.js","sourcesContent":["export const UPDATE_ARR = \"UPDATE_ARR\";\n\nexport const updateArray = (payload) => {\n    return {\n        type: UPDATE_ARR,\n        payload: payload,\n    };\n};\n","const randomizer = (length) => {\n    var arr = new Array(length).fill(0);\n    return arr.map((element) => {\n        return Math.floor(Math.random() * 500) + 50;\n    });\n};\n\nexport default randomizer;\n","import { UPDATE_ARR } from \"./../../actions/updateArray\";\nimport { UPDATE_RUNNING } from \"../../actions/updateRunning\";\nimport randomizer from \"./../../../algorithms/helpers/randomizer\";\n\nconst defaultArrayLength = 20;\n\nconst defaultState = {\n    length: defaultArrayLength,\n    arr: randomizer(defaultArrayLength),\n    isAlgoRunning: false,\n};\n\nconst arrayReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case UPDATE_ARR:\n            return {\n                ...state,\n                arr: action.payload.arr,\n            };\n        case UPDATE_RUNNING:\n            console.log(action.payload);\n            return {\n                ...state,\n                isAlgoRunning: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default arrayReducer;\n","export const UPDATE_RUNNING = \"UPDATE_RUNNING\";\n\nexport const updateRunning = (payload) => {\n    return {\n        type: UPDATE_RUNNING,\n        payload: payload,\n    };\n};\n","//Default size of the array\nexport const defaultArrayLength = 20;\n\n//Default delay\nexport const defaultDelay = Number(400);\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n} from \"./../../actions/bubbleSort\";\n\nimport { defaultArrayLength } from \"./../../../algorithms/helpers/defaults\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: defaultArrayLength,\n};\n\nconst bubbleReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default bubbleReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n","import { DELAY } from \"./../../actions/delay\";\nimport { defaultDelay } from \"./../../../algorithms/helpers/defaults\";\n\nconst delayReducer = (state = defaultDelay, action) => {\n    switch (action.type) {\n        case DELAY:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default delayReducer;\n","export const DELAY = \"DELAY\";\n\nexport const updateDelay = (payload) => {\n    return {\n        type: DELAY,\n        payload: payload,\n    };\n};\n","import { combineReducers } from \"redux\";\n\n//Importing reducers\nimport arrayReducer from \"./array\";\nimport bubbleReducer from \"./bubbleSort\";\nimport delayReducer from \"./delay\";\n\n//Combining reducers\nconst rootReducer = combineReducers({\n    arrayReducer: arrayReducer,\n    bubbleReducer: bubbleReducer,\n    delayReducer: delayReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\n//Importing rootreducer\nimport rootReducer from \"./reducers/rootReducer\";\n\n//Creating store\nconst store = createStore(rootReducer);\n\nexport default store;\n","export function delay(delayInms) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(1);\n        }, delayInms);\n    });\n}\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nconst bubbleSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk,\n    dispatch\n) => {\n    updateRunning(true);\n\n    var newArr = [...array];\n    console.log(\"hello\");\n    console.log(newArr);\n\n    for (let i = 0; i < newArr.length; i++) {\n        var no_swap = true;\n        for (let j = 0; j < newArr.length - i - 1; j++) {\n            compareCandle([j, j + 1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n\n            if (newArr[j] > newArr[j + 1]) {\n                compareCandle([-1, -1]);\n                compareCandleNotOk([j, j + 1]);\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n                await delay(delay_time);\n\n                no_swap = false;\n                [newArr[j], newArr[j + 1]] = [newArr[j + 1], newArr[j]];\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n\n                compareCandleNotOk([-1, -1]);\n            }\n            compareCandle([-1, -1]);\n            compareCandleOk([j, j + 1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n            compareCandleOk([-1, -1]);\n        }\n\n        if (no_swap) {\n            sortedCandle(-1);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            break;\n        } else {\n            sortedCandle(newArr.length - i - 1);\n        }\n    }\n    await delay(1000);\n    sortedCandle(newArr.length);\n    dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    console.log(newArr);\n\n    updateRunning(false);\n};\n\nexport default bubbleSort;\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\n//Importing Helpers\nimport randomizer from './../algorithms/helpers/randomizer';\n\n\n//Improting sorting Algorithms\nimport bubbleSort from './../algorithms/sortingAlgos/bubbleSort';\n\n\n//Importing actions\nimport { updateArray } from './../redux/actions/updateArray';\nimport { updateRunning } from '../redux/actions/updateRunning';\nimport { updateDelay } from './../redux/actions/delay';\n\nimport {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk\n} from \"./../redux/actions/bubbleSort\"\n\n\nclass ControlWindow extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            len: props.arr.length,\n        }\n        this.randomizeHandler = this.randomizeHandler.bind(this);\n        this.arrayLengthHandler = this.arrayLengthHandler.bind(this);\n        this.sortClickHandler = this.sortClickHandler.bind(this);\n        this.delayHandler = this.delayHandler.bind(this);\n    }\n\n    randomizeHandler(){\n        const newArr = randomizer(this.state.len);\n        console.log(newArr);\n        this.props.updateArr(newArr);\n    }\n\n    arrayLengthHandler(event){\n        const newLength = Number(event.target.value);\n        this.setState({\n            len: newLength,\n        });\n        console.log(newLength);\n        this.randomizeHandler();\n\n        //bubbleSort\n        this.props.sortedCandle(newLength);\n    }\n\n    delayHandler(event){\n        console.log(this.props.delay+\"->\");\n        const newDelay = 600 - Number(event.target.value);\n        this.props.updateDelay(newDelay);\n        console.log(this.props.delay);\n    }\n\n    async sortClickHandler(){\n        this.props.sort(\n            this.props.updateRunning,\n            this.props.delay,\n            this.props.arr,\n            this.props.sortedCandle,\n            this.props.compareCandle,\n            this.props.compareCandleOk,\n            this.props.compareCandleNotOk\n        );\n    }\n\n    render() {\n        return (\n            <div className='ControlWindow'>\n                <h6>Size: {this.props.arr.length}</h6>\n                <input \n                    className='inputs'\n                    type='range' \n                    min='10' \n                    max='50' \n                    defaultValue='20' \n                    onChange={this.arrayLengthHandler}\n                    onClick={this.arrayLengthHandler}\n                    disabled = {this.props.isAlgoRunning}\n                ></input>\n                <h6>Speed: {610-Number(this.props.delay)}</h6>\n                <input \n                    className='inputs'\n                    type='range' \n                    min='0' \n                    max='600' \n                    defaultValue={600-Number(this.props.delay)} //since default is delay not speed\n                    onChange={this.delayHandler}\n                    onClick={this.delayHandler}\n                    disabled = {this.props.isAlgoRunning}\n                ></input>\n                <button \n                    className='btn btn-outline-dark' \n                    onClick={this.randomizeHandler}\n                    disabled = {this.props.isAlgoRunning}\n                >Randomize</button>\n                <button \n                    className='btn btn-outline-dark' \n                    onClick={this.sortClickHandler}\n                    disabled = {this.props.isAlgoRunning}\n                >Sort</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        arr: state.arrayReducer.arr,\n        delay: state.delayReducer,\n        isAlgoRunning: state.arrayReducer.isAlgoRunning,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateArr : (newArr) => {\n            dispatch(updateArray({arr:newArr}));\n        },\n\n        updateRunning: (payload) => {\n            dispatch(updateRunning(payload));\n        },\n\n        updateDelay : (value) => {\n            dispatch(updateDelay(value));\n        },\n\n        sort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            ) => {\n            bubbleSort(updateRunning, delay, array, \n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk,\n                dispatch\n            );\n        },\n\n        //bubbleSort\n        sortedCandle : (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle : (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk : (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk : (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ControlWindow);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayWindow extends Component {\n    constructor(props){\n        super(props);\n\n        this.color = this.color.bind(this);\n    }\n\n    color(indx) {\n        // Set Colors\n        if (indx >= this.props.sortedCandle) {\n            return \"blue\";\n        } else if (\n            indx === this.props.compareCandleNotOk[0] ||\n            indx === this.props.compareCandleNotOk[1]\n        ) {\n            return \"red\";\n        } else if (indx === this.props.compareCandleOk[0] || indx === this.props.compareCandleOk[1]) {\n            return \"green\";\n        } else if (indx === this.props.compareCandle[0] || indx === this.props.compareCandle[1]) {\n            return \"DodgerBlue\";\n        } else return \"DarkSlateGray\";\n    }\n\n    render() {\n        const candleArr = this.props.arr.map((element,indx)=>{\n            const s = {\n                height: `${element}px`,\n                width: `${500 / this.props.arr.length}px`,\n                backgroundColor: `${this.color(indx)}`,\n            }\n            return (\n                <div className='candle' style={s} key={indx}></div>\n            )\n        })\n        return (\n            <div className=\"DisplayWindow\">\n                <div className='candles'>\n                    {candleArr}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        arr: state.arrayReducer.arr,\n\n        //bubbleSort\n        compareCandle: state.bubbleReducer.compareCandle,\n        compareCandleOk: state.bubbleReducer.compareCandleOk,\n        compareCandleNotOk: state.bubbleReducer.compareCandleNotOk,\n        sortedCandle: state.bubbleReducer.sortedCandle,\n    }\n}\n\nexport default connect(mapStateToProps,null)(DisplayWindow);","import React, { Component } from \"react\";\n\n//Importing all components\nimport ControlWindow from './ControlWindow';\nimport DisplayWindow from './DisplayWindow';\n\nexport default class MainComponent extends Component{\n    render(){\n        return (\n            <div>\n                <ControlWindow/>\n                <DisplayWindow/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\n//Importing css\nimport \"./styles/App.css\";\n\n//Importing store\nimport store from \"./redux/store\";\n\n//Importing Main Component\nimport MainComponent from \"./components/MainComponent\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <MainComponent />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}