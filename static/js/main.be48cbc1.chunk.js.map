{"version":3,"sources":["redux/actions/updateArray.js","algorithms/helpers/randomizer.js","redux/reducers/array/index.js","redux/actions/updateRunning.js","redux/actions/updateAlgo.js","algorithms/helpers/defaults.js","redux/reducers/delay/index.js","redux/actions/delay.js","redux/reducers/bubbleSort/index.js","redux/actions/bubbleSort/index.js","redux/reducers/selectionSort/index.js","redux/actions/selectionSort/index.js","redux/reducers/insertionSort/index.js","redux/actions/insertionSort/index.js","redux/reducers/mergeSort/index.js","redux/actions/mergeSort/index.js","redux/reducers/quickSort/index.js","redux/actions/quickSort/index.js","redux/reducers/rootReducer.js","redux/store.js","algorithms/helpers/delayer.js","algorithms/sortingAlgos/bubbleSort.js","redux/dispatchers/bubbleSortDispatcher.js","algorithms/sortingAlgos/selectionSort.js","redux/dispatchers/selectionSortDispatcher.js","algorithms/sortingAlgos/insertionSort.js","redux/dispatchers/insertionSortDispatcher.js","algorithms/sortingAlgos/mergeSort.js","redux/dispatchers/mergeSortDispatcher.js","algorithms/sortingAlgos/quickSort.js","redux/dispatchers/quickSortDispatcher.js","components/ControlWindow.jsx","components/DisplayWindow.jsx","components/MainComponent.jsx","index.js"],"names":["updateArray","payload","type","randomizer","length","Array","fill","map","element","Math","floor","random","defaultState","arr","isAlgoRunning","currentAlgo","arrayReducer","state","action","console","log","defaultDelay","Number","delayReducer","compareCandle","compareCandleOk","compareCandleNotOk","sortedCandle","bubbleReducer","Object","assign","selectionReducer","insertionReducer","mergeReducer","currentPivot","quickReducer","rootReducer","combineReducers","store","createStore","delay","delayInms","Promise","resolve","setTimeout","bubbleSort","updateRunning","delay_time","array","dispatch","a","newArr","i","no_swap","j","e","bubbleSortDispatcher","value","selectionSort","min_indx","temp","selectionSortDispatcher","insertionSort","insertionSortDispatcher","original_array","merge","leftArr","rightArr","base_indx","li","ri","min_value","recursiveMergeSort","middle","left_half","filter","indx","right_half","mergeSort","mergeSortDispatcher","getPivot","l","r","pi","cur","recursiveQuickSort","pivot","quickSort","quickSortDispatcher","ControlWindow","props","len","randomizeHandler","bind","arrayLengthHandler","sortClickHandler","delayHandler","handleAlgoSelect","this","updateArr","event","newLength","target","setState","newDelay","updateDelay","updateAlgo","runBubbleSort","runSelectionSort","runInsertionSort","runMergeSort","runQuickSort","className","min","max","defaultValue","onChange","onClick","disabled","name","selected","hidden","Component","connect","algo","DisplayWindow","color","candleArr","s","height","width","backgroundColor","style","key","MainComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be48cbc1.chunk.js","sourcesContent":["export const UPDATE_ARR = \"UPDATE_ARR\";\n\nexport const updateArray = (payload) => {\n    return {\n        type: UPDATE_ARR,\n        payload: payload,\n    };\n};\n","const randomizer = (length) => {\n    var arr = new Array(length).fill(0);\n    return arr.map((element) => {\n        return Math.floor(Math.random() * 500) + 50;\n    });\n};\n\nexport default randomizer;\n","import { UPDATE_ARR } from \"./../../actions/updateArray\";\nimport { UPDATE_RUNNING } from \"../../actions/updateRunning\";\nimport { UPDATE_ALGO } from \"../../actions/updateAlgo\";\nimport randomizer from \"./../../../algorithms/helpers/randomizer\";\n\nconst defaultArrayLength = 20;\n\nconst defaultState = {\n    length: defaultArrayLength,\n    arr: randomizer(defaultArrayLength),\n    isAlgoRunning: false,\n    currentAlgo: \"none\",\n};\n\nconst arrayReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case UPDATE_ARR:\n            return {\n                ...state,\n                arr: action.payload.arr,\n            };\n        case UPDATE_RUNNING:\n            console.log(action.payload);\n            return {\n                ...state,\n                isAlgoRunning: action.payload,\n            };\n        case UPDATE_ALGO:\n            return {\n                ...state,\n                currentAlgo: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default arrayReducer;\n","export const UPDATE_RUNNING = \"UPDATE_RUNNING\";\n\nexport const updateRunning = (payload) => {\n    return {\n        type: UPDATE_RUNNING,\n        payload: payload,\n    };\n};\n","export const UPDATE_ALGO = \"UPDATE_ALGO\";\n\nexport const updateAlgo = (payload) => {\n    return {\n        type: UPDATE_ALGO,\n        payload: payload,\n    };\n};\n","//Default size of the array\nexport const defaultArrayLength = 20;\n\n//Default delay\nexport const defaultDelay = Number(400);\n","import { DELAY } from \"./../../actions/delay\";\nimport { defaultDelay } from \"./../../../algorithms/helpers/defaults\";\n\nconst delayReducer = (state = defaultDelay, action) => {\n    switch (action.type) {\n        case DELAY:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default delayReducer;\n","export const DELAY = \"DELAY\";\n\nexport const updateDelay = (payload) => {\n    return {\n        type: DELAY,\n        payload: payload,\n    };\n};\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n} from \"./../../actions/bubbleSort\";\n\nimport { defaultArrayLength } from \"./../../../algorithms/helpers/defaults\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: defaultArrayLength,\n};\n\nconst bubbleReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default bubbleReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n} from \"./../../actions/selectionSort\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: -1,\n};\n\nconst selectionReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default selectionReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n} from \"./../../actions/insertionSort\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: -1,\n};\n\nconst insertionReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default insertionReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n} from \"./../../actions/mergeSort\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: -1,\n};\n\nconst mergeReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default mergeReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n","import {\n    COMPARE_CANDLE,\n    COMPARE_CANDLE_OK,\n    COMPARE_CANDLE_NOT_OK,\n    SORTED_CANDLE,\n    CURRENT_PIVOT,\n} from \"./../../actions/quickSort\";\n\nconst defaultState = {\n    compareCandle: [-1, -1],\n    compareCandleOk: [-1, -1],\n    compareCandleNotOk: [-1, -1],\n    sortedCandle: -1,\n    currentPivot: -1,\n};\n\nconst quickReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case COMPARE_CANDLE: {\n            return Object.assign(state, { compareCandle: action.payload });\n        }\n        case COMPARE_CANDLE_OK: {\n            return Object.assign(state, { compareCandleOk: action.payload });\n        }\n        case COMPARE_CANDLE_NOT_OK: {\n            return Object.assign(state, { compareCandleNotOk: action.payload });\n        }\n        case SORTED_CANDLE: {\n            // -- Dosen't work\n            // return {\n            //     sortedCandle: action.payload,\n            // };\n\n            // -- Solution 1\n            return Object.assign(state, { sortedCandle: action.payload });\n\n            // -- Solution 2\n            // return { ...state, ...{ sortedCandle: action.payload } };\n        }\n        case CURRENT_PIVOT: {\n            return Object.assign(state, { currentPivot: action.payload });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default quickReducer;\n","export const COMPARE_CANDLE = \"COMPARE_CANDLE\";\nexport const COMPARE_CANDLE_OK = \"COMPARE_CANDLE_OK\";\nexport const COMPARE_CANDLE_NOT_OK = \"COMPARE_CANDLE_NOT_OK\";\nexport const SORTED_CANDLE = \"SORTED_CANDLE\";\nexport const CURRENT_PIVOT = \"CURRENT_PIVOT\";\n\nexport const updateCompareCandle = (payload) => {\n    return {\n        type: COMPARE_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_OK,\n        payload: payload,\n    };\n};\n\nexport const updateCompareCandleNotOk = (payload) => {\n    return {\n        type: COMPARE_CANDLE_NOT_OK,\n        payload: payload,\n    };\n};\n\nexport const updateSortedCandle = (payload) => {\n    console.log(\"==\" + payload);\n    return {\n        type: SORTED_CANDLE,\n        payload: payload,\n    };\n};\n\nexport const updateCurrentPivot = (payload) => {\n    return {\n        type: CURRENT_PIVOT,\n        payload: payload,\n    };\n};\n","import { combineReducers } from \"redux\";\n\n//Importing reducers\nimport arrayReducer from \"./array\";\nimport delayReducer from \"./delay\";\nimport bubbleReducer from \"./bubbleSort\";\nimport selectionReducer from \"./selectionSort\";\nimport insertionReducer from \"./insertionSort\";\nimport mergeReducer from \"./mergeSort\";\nimport quickReducer from \"./quickSort\";\n\n//Combining reducers\nconst rootReducer = combineReducers({\n    arrayReducer: arrayReducer,\n    delayReducer: delayReducer,\n\n    //sorting reducers\n    bubbleReducer: bubbleReducer,\n    selectionReducer: selectionReducer,\n    insertionReducer: insertionReducer,\n    mergeReducer: mergeReducer,\n    quickReducer: quickReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\n//Importing rootreducer\nimport rootReducer from \"./reducers/rootReducer\";\n\n//Creating store\nconst store = createStore(rootReducer);\n\nexport default store;\n","export function delay(delayInms) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(1);\n        }, delayInms);\n    });\n}\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nconst bubbleSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    dispatch,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    updateRunning(true);\n\n    var newArr = [...array];\n    console.log(\"bubbleSort\");\n    console.log(newArr);\n\n    for (let i = 0; i < newArr.length; i++) {\n        var no_swap = true;\n        for (let j = 0; j < newArr.length - i - 1; j++) {\n            compareCandle([j, j + 1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n\n            if (newArr[j] > newArr[j + 1]) {\n                compareCandle([-1, -1]);\n                compareCandleNotOk([j, j + 1]);\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n                await delay(delay_time);\n\n                no_swap = false;\n                [newArr[j], newArr[j + 1]] = [newArr[j + 1], newArr[j]];\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n\n                compareCandleNotOk([-1, -1]);\n            }\n            compareCandle([-1, -1]);\n            compareCandleOk([j, j + 1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n            compareCandleOk([-1, -1]);\n        }\n\n        if (no_swap) {\n            sortedCandle(-1);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            break;\n        } else {\n            sortedCandle(newArr.length - i - 1);\n        }\n    }\n    await delay(1000);\n    sortedCandle(newArr.length);\n    dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    console.log(newArr);\n\n    updateRunning(false);\n};\n\nexport default bubbleSort;\n","import {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk,\n} from \"./../actions/bubbleSort\";\n\nexport const bubbleSortDispatcher = (dispatch) => {\n    return {\n        //bubbleSort\n        sortedCandle: (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle: (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk: (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk: (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        },\n    };\n};\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nconst selectionSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    dispatch,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    updateRunning(true);\n\n    var newArr = [...array];\n    console.log(\"selectionSort\");\n    console.log(newArr);\n\n    for (let i = 0; i < newArr.length; i++) {\n        await delay(delay_time);\n        var min_indx = i;\n\n        for (let j = i + 1; j < newArr.length; j++) {\n            await delay(delay_time);\n            compareCandleOk([min_indx, -1]);\n            compareCandle([j, -1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n\n            if (newArr[j] < newArr[min_indx]) {\n                await delay(delay_time);\n                compareCandleOk([-1, -1]);\n                compareCandle([-1, -1]);\n                compareCandleNotOk([min_indx, j]);\n\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n                await delay(delay_time);\n\n                min_indx = j;\n\n                compareCandleNotOk([-1, -1]);\n                compareCandleOk([min_indx, -1]);\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            }\n        }\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n        await delay(delay_time);\n\n        compareCandle([-1, -1]);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n\n        compareCandleNotOk([i, min_indx]);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n        await delay(delay_time);\n\n        const temp = newArr[i];\n        newArr[i] = newArr[min_indx];\n        newArr[min_indx] = temp;\n\n        compareCandleNotOk([-1, -1]);\n        compareCandleOk([i, min_indx]);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n        await delay(delay_time);\n        compareCandleOk([-1, -1]);\n\n        sortedCandle(i);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    }\n\n    compareCandleOk([-1, -1]);\n    compareCandle([-1, -1]);\n    compareCandleNotOk([-1, -1]);\n\n    await delay(1000);\n    sortedCandle(-1);\n    dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    console.log(newArr);\n\n    updateRunning(false);\n};\n\nexport default selectionSort;\n","import {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk,\n} from \"./../actions/selectionSort\";\n\nexport const selectionSortDispatcher = (dispatch) => {\n    return {\n        sortedCandle: (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle: (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk: (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk: (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        },\n    };\n};\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nconst insertionSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    dispatch,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    updateRunning(true);\n\n    var newArr = [...array];\n    console.log(\"insertionSort\");\n    console.log(newArr);\n\n    sortedCandle(0);\n    dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    await delay(delay_time);\n    for (let i = 1; i < newArr.length; i++) {\n        compareCandle([i, -1]);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n        await delay(delay_time);\n\n        if (newArr[i - 1] > newArr[i]) {\n            compareCandleNotOk([i, -1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n\n            let j = i;\n            while (newArr[j - 1] > newArr[j]) {\n                const temp = newArr[j];\n                newArr[j] = newArr[j - 1];\n                newArr[j - 1] = temp;\n\n                sortedCandle(i);\n                compareCandleNotOk([j - 1, -1]);\n                dispatch(updateArray({ arr: newArr.map((e) => e) }));\n                await delay(delay_time);\n\n                j--;\n            }\n            compareCandleNotOk([-1, -1]);\n            compareCandleOk([j, -1]);\n            dispatch(updateArray({ arr: newArr.map((e) => e) }));\n            await delay(delay_time);\n            compareCandleOk([-1, -1]);\n        }\n\n        sortedCandle(i);\n        dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    }\n    compareCandle([-1, -1]);\n    await delay(1000);\n    sortedCandle(-1);\n    dispatch(updateArray({ arr: newArr.map((e) => e) }));\n    console.log(newArr);\n\n    updateRunning(false);\n};\n\nexport default insertionSort;\n","import {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk,\n} from \"./../actions/insertionSort\";\n\nexport const insertionSortDispatcher = (dispatch) => {\n    return {\n        sortedCandle: (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle: (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk: (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk: (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        },\n    };\n};\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nlet original_array = [];\n\nconst merge = async (\n    arr,\n    leftArr,\n    rightArr,\n    base_indx,\n    dispatch,\n    delay_time,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    let li = 0,\n        ri = 0;\n\n    compareCandle([base_indx, base_indx + arr.length - 1]);\n\n    for (let i = 0; i < arr.length; i++) {\n        //--\n        compareCandleOk([-1, -1]);\n        compareCandleNotOk([-1, base_indx + i]);\n\n        dispatch(updateArray({ arr: original_array.map((e) => e) }));\n        await delay(delay_time);\n        //--\n        let min_value = 0;\n\n        if (li >= leftArr.length) {\n            min_value = rightArr[ri];\n            ri++;\n        } else if (ri >= rightArr.length) {\n            min_value = leftArr[li];\n            li++;\n        } else {\n            if (leftArr[li] < rightArr[ri]) {\n                min_value = leftArr[li];\n                li++;\n            } else {\n                min_value = rightArr[ri];\n                ri++;\n            }\n        }\n\n        arr[i] = min_value;\n\n        //reflecting new merged array to the current state\n        for (let i = 0; i < arr.length; i++) {\n            original_array[base_indx + i] = arr[i];\n        }\n        compareCandleNotOk([-1, -1]);\n        compareCandleOk([-1, base_indx + i]);\n        dispatch(updateArray({ arr: original_array.map((e) => e) }));\n        await delay(delay_time);\n        //--\n    }\n\n    compareCandleOk([-1, -1]);\n    compareCandle([-1, -1]);\n\n    return Promise.resolve(0);\n};\n\nconst recursiveMergeSort = async (\n    arr,\n    base_indx,\n    dispatch,\n    delay_time,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    if (arr.length <= 1) {\n        return Promise.resolve(0);\n    }\n\n    let middle = Math.floor(arr.length / 2);\n\n    let left_half = arr.filter((element, indx) => indx < middle);\n    let right_half = arr.filter((element, indx) => indx >= middle);\n\n    await recursiveMergeSort(\n        left_half,\n        base_indx,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk\n    );\n\n    await recursiveMergeSort(\n        right_half,\n        base_indx + middle,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk\n    );\n\n    arr = await merge(\n        arr,\n        left_half,\n        right_half,\n        base_indx,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk\n    );\n\n    return Promise.resolve(0);\n};\n\nconst mergeSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    dispatch,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk\n) => {\n    updateRunning(true);\n\n    original_array = array;\n\n    await recursiveMergeSort(\n        array,\n        0,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk\n    );\n\n    sortedCandle(array.length);\n    dispatch(updateArray({ arr: array.map((e) => e) }));\n\n    await delay(1000);\n    sortedCandle(-1);\n    dispatch(updateArray({ arr: array.map((e) => e) }));\n\n    console.log(array);\n    updateRunning(false);\n};\n\nexport default mergeSort;\n","import {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk,\n} from \"./../actions/mergeSort\";\n\nexport const mergeSortDispatcher = (dispatch) => {\n    return {\n        sortedCandle: (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle: (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk: (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk: (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        },\n    };\n};\n","import { updateArray } from \"./../../redux/actions/updateArray\";\nimport { delay } from \"./../helpers/delayer\";\n\nconst getPivot = async (\n    arr,\n    l,\n    r,\n    dispatch,\n    delay_time,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk,\n    currentPivot\n) => {\n    const pi = r;\n    currentPivot(pi);\n\n    let cur = l - 1;\n\n    for (let i = l; i <= r; i++) {\n        compareCandle([cur, i]);\n        dispatch(updateArray({ arr: arr.map((e) => e) }));\n        await delay(delay_time);\n\n        if (arr[i] < arr[pi]) {\n            cur++;\n\n            compareCandle([-1, -1]);\n            compareCandleNotOk([cur, i]);\n            dispatch(updateArray({ arr: arr.map((e) => e) }));\n            await delay(delay_time);\n\n            [arr[cur], arr[i]] = [arr[i], arr[cur]];\n\n            compareCandleNotOk([-1, -1]);\n            compareCandleOk([cur, i]);\n            dispatch(updateArray({ arr: arr.map((e) => e) }));\n            await delay(delay_time);\n        }\n\n        compareCandleOk([-1, -1]);\n    }\n\n    cur++;\n\n    currentPivot(-1);\n    compareCandle([-1, -1]);\n    compareCandleNotOk([cur, pi]);\n    dispatch(updateArray({ arr: arr.map((e) => e) }));\n    await delay(delay_time);\n\n    [arr[cur], arr[pi]] = [arr[pi], arr[cur]];\n\n    compareCandleNotOk([-1, -1]);\n    compareCandleOk([cur, pi]);\n    dispatch(updateArray({ arr: arr.map((e) => e) }));\n    await delay(delay_time);\n    compareCandleOk([-1, -1]);\n\n    return cur;\n};\n\nconst recursiveQuickSort = async (\n    arr,\n    l,\n    r,\n    dispatch,\n    delay_time,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk,\n    currentPivot\n) => {\n    if (l >= r) {\n        return;\n    }\n    const pivot = await getPivot(\n        arr,\n        l,\n        r,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk,\n        currentPivot\n    );\n\n    await recursiveQuickSort(\n        arr,\n        l,\n        pivot - 1,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk,\n        currentPivot\n    );\n    await recursiveQuickSort(\n        arr,\n        pivot + 1,\n        r,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk,\n        currentPivot\n    );\n\n    return Promise.resolve(0);\n};\n\nconst quickSort = async (\n    updateRunning,\n    delay_time,\n    array,\n    dispatch,\n    sortedCandle,\n    compareCandle,\n    compareCandleOk,\n    compareCandleNotOk,\n    currentPivot\n) => {\n    updateRunning(true);\n    await recursiveQuickSort(\n        array,\n        0,\n        array.length - 1,\n        dispatch,\n        delay_time,\n        sortedCandle,\n        compareCandle,\n        compareCandleOk,\n        compareCandleNotOk,\n        currentPivot\n    );\n\n    sortedCandle(array.length);\n    dispatch(updateArray({ arr: array.map((e) => e) }));\n\n    await delay(1000);\n    sortedCandle(-1);\n    dispatch(updateArray({ arr: array.map((e) => e) }));\n\n    console.log(array);\n    updateRunning(false);\n};\n\nexport default quickSort;\n\n// const aa = [\n//     234,\n//     21,\n//     34,\n//     214,\n//     12,\n//     34,\n//     2,\n//     34,\n//     213,\n//     42,\n//     4,\n//     23,\n//     4,\n//     12,\n//     4,\n//     214,\n//     213,\n//     4,\n//     231,\n//     5,\n//     32,\n//     5,\n//     235,\n//     23,\n//     5,\n//     23,\n//     5,\n//     32,\n//     512,\n//     5,\n//     321,\n//     35,\n//     12,\n//     35,\n//     12,\n//     5,\n//     123,\n//     5213,\n//     5,\n//     2,\n//     1,\n// ];\n\n// recursiveQuickSort(aa, 0, aa.length - 1);\n","import {\n    updateSortedCandle,\n    updateCompareCandle,\n    updateCompareCandleOk,\n    updateCompareCandleNotOk,\n    updateCurrentPivot,\n} from \"./../actions/quickSort\";\n\nexport const quickSortDispatcher = (dispatch) => {\n    return {\n        sortedCandle: (value) => {\n            dispatch(updateSortedCandle(value));\n        },\n        compareCandle: (value) => {\n            dispatch(updateCompareCandle(value));\n        },\n        compareCandleOk: (value) => {\n            dispatch(updateCompareCandleOk(value));\n        },\n        compareCandleNotOk: (value) => {\n            dispatch(updateCompareCandleNotOk(value));\n        },\n        currentPivot: (value) => {\n            dispatch(updateCurrentPivot(value));\n        },\n    };\n};\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\n//Importing Helpers\nimport randomizer from './../algorithms/helpers/randomizer';\n\n\n//Improting sorting Algorithms\nimport bubbleSort from './../algorithms/sortingAlgos/bubbleSort';\nimport { bubbleSortDispatcher } from \"./../redux/dispatchers/bubbleSortDispatcher\";\n\nimport selectionSort from './../algorithms/sortingAlgos/selectionSort';\nimport { selectionSortDispatcher } from \"./../redux/dispatchers/selectionSortDispatcher\";\n\nimport insertionSort from './../algorithms/sortingAlgos/insertionSort';\nimport { insertionSortDispatcher } from \"./../redux/dispatchers/insertionSortDispatcher\";\n\nimport mergeSort from './../algorithms/sortingAlgos/mergeSort';\nimport { mergeSortDispatcher } from './../redux/dispatchers/mergeSortDispatcher';\n\nimport quickSort from './../algorithms/sortingAlgos/quickSort';\nimport { quickSortDispatcher } from './../redux/dispatchers/quickSortDispatcher';\n\n\n//Importing actions\nimport { updateArray } from './../redux/actions/updateArray';\nimport { updateRunning } from '../redux/actions/updateRunning';\nimport { updateDelay } from './../redux/actions/delay';\nimport { updateAlgo } from './../redux/actions/updateAlgo';\n\n\nclass ControlWindow extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            len: props.arr.length,\n        }\n        this.randomizeHandler = this.randomizeHandler.bind(this);\n        this.arrayLengthHandler = this.arrayLengthHandler.bind(this);\n        this.sortClickHandler = this.sortClickHandler.bind(this);\n        this.delayHandler = this.delayHandler.bind(this);\n        this.handleAlgoSelect = this.handleAlgoSelect.bind(this);\n    }\n\n    randomizeHandler(){\n        const newArr = randomizer(this.state.len);\n        console.log(newArr);\n        this.props.updateArr(newArr);\n    }\n\n    arrayLengthHandler(event){\n        const newLength = Number(event.target.value);\n        this.setState({\n            len: newLength,\n        });\n        console.log(newLength);\n        this.randomizeHandler();\n\n        //bubbleSort sorted color hardcode\n        if(this.props.currentAlgo===\"bubbleSort\"){\n            this.props.bubbleSort.sortedCandle(newLength);\n        } else {\n            this.props.selectionSort.sortedCandle(-1);\n        }\n        // this.props.bubbleSort.sortedCandle(newLength);\n    }\n\n    delayHandler(event){\n        console.log(this.props.delay+\"->\");\n        const newDelay = 600 - Number(event.target.value);\n        this.props.updateDelay(newDelay);\n        console.log(this.props.delay);\n    }\n\n    handleAlgoSelect(event){\n        this.props.updateAlgo(event.target.value);\n    }\n\n    async sortClickHandler(){\n        switch(this.props.currentAlgo){\n            case \"bubbleSort\":\n                this.props.runBubbleSort(\n                    this.props.updateRunning,\n                    this.props.delay,\n                    this.props.arr,\n                    this.props.bubbleSort.sortedCandle,\n                    this.props.bubbleSort.compareCandle,\n                    this.props.bubbleSort.compareCandleOk,\n                    this.props.bubbleSort.compareCandleNotOk\n                );\n            break;\n            case \"selectionSort\":\n                this.props.runSelectionSort(\n                    this.props.updateRunning,\n                    this.props.delay,\n                    this.props.arr,\n                    this.props.selectionSort.sortedCandle,\n                    this.props.selectionSort.compareCandle,\n                    this.props.selectionSort.compareCandleOk,\n                    this.props.selectionSort.compareCandleNotOk\n                );\n            break;\n            case \"insertionSort\":\n                this.props.runInsertionSort(\n                    this.props.updateRunning,\n                    this.props.delay,\n                    this.props.arr,\n                    this.props.insertionSort.sortedCandle,\n                    this.props.insertionSort.compareCandle,\n                    this.props.insertionSort.compareCandleOk,\n                    this.props.insertionSort.compareCandleNotOk\n                );\n            break;\n            case \"mergeSort\":\n                this.props.runMergeSort(\n                    this.props.updateRunning,\n                    this.props.delay,\n                    this.props.arr,\n                    this.props.mergeSort.sortedCandle,\n                    this.props.mergeSort.compareCandle,\n                    this.props.mergeSort.compareCandleOk,\n                    this.props.mergeSort.compareCandleNotOk\n                );\n            break;\n            case \"quickSort\":\n                this.props.runQuickSort(\n                    this.props.updateRunning,\n                    this.props.delay,\n                    this.props.arr,\n                    this.props.quickSort.sortedCandle,\n                    this.props.quickSort.compareCandle,\n                    this.props.quickSort.compareCandleOk,\n                    this.props.quickSort.compareCandleNotOk,\n                    this.props.quickSort.currentPivot,\n                );\n            break;\n            default:\n                console.log(\"Algo name error\");\n        }\n    }\n\n    render() {\n        return (\n            <div className='ControlWindow'>\n                <h6>Size: {this.props.arr.length}</h6>\n                <input \n                    className='inputs'\n                    type='range' \n                    min='10' \n                    max='50' \n                    defaultValue='20' \n                    onChange={this.arrayLengthHandler}\n                    onClick={this.arrayLengthHandler}\n                    disabled = {this.props.isAlgoRunning}\n                ></input>\n\n                <h6>Speed: {610-Number(this.props.delay)}</h6>\n                <input \n                    className='inputs'\n                    type='range' \n                    min='0' \n                    max='600' \n                    defaultValue={600-Number(this.props.delay)} //since default is delay not speed\n                    onChange={this.delayHandler}\n                    onClick={this.delayHandler}\n                    disabled = {this.props.isAlgoRunning}\n                ></input>\n\n                <button \n                    className='btn btn-outline-dark' \n                    onClick={this.randomizeHandler}\n                    disabled = {this.props.isAlgoRunning}\n                >Randomize</button>\n\n                <select name=\"Algorithm\" disabled={this.props.isAlgoRunning} onChange={this.handleAlgoSelect}>\n                    <option value=\"none\" selected disabled hidden>Choose Algorithm</option>\n                    <option value=\"bubbleSort\">Bubble Sort</option>\n                    <option value=\"selectionSort\">Selection Sort</option>\n                    <option value=\"insertionSort\">Insertion Sort</option>\n                    <option value=\"mergeSort\">Merge Sort</option>\n                    <option value=\"quickSort\">Quick Sort</option>\n                </select>\n\n                <button \n                    className='btn btn-outline-dark' \n                    onClick={this.sortClickHandler}\n                    disabled = {this.props.isAlgoRunning||(this.props.currentAlgo===\"none\")}\n                >Sort</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        arr: state.arrayReducer.arr,\n        delay: state.delayReducer,\n        isAlgoRunning: state.arrayReducer.isAlgoRunning,\n        currentAlgo: state.arrayReducer.currentAlgo\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateArr : (newArr) => {\n            dispatch(updateArray({arr:newArr}));\n        },\n\n        updateRunning: (payload) => {\n            dispatch(updateRunning(payload));\n        },\n\n        updateDelay : (value) => {\n            dispatch(updateDelay(value));\n        },\n\n        updateAlgo : (algo) => {\n            dispatch(updateAlgo(algo));\n        },\n\n        //Bubble Sort\n        runBubbleSort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            ) => {\n            bubbleSort(updateRunning, delay, array, dispatch,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            );\n        },\n        bubbleSort: bubbleSortDispatcher(dispatch),\n\n        //Selection Sort\n        runSelectionSort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            ) => {\n            selectionSort(updateRunning, delay, array, dispatch,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            );\n        },\n        selectionSort: selectionSortDispatcher(dispatch),\n\n        //Insertion Sort\n        runInsertionSort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            ) => {\n            insertionSort(updateRunning, delay, array, dispatch,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            );\n        },\n        insertionSort: insertionSortDispatcher(dispatch),\n\n        //Merge Sort\n        runMergeSort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            ) => {\n            mergeSort(updateRunning, delay, array, dispatch,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk\n            );\n        },\n        mergeSort: mergeSortDispatcher(dispatch),\n\n        //Quick Sort\n        runQuickSort : (updateRunning, delay, array,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk,\n                currentPivot\n            ) => {\n            quickSort(updateRunning, delay, array, dispatch,\n                sortedCandle,\n                compareCandle,\n                compareCandleOk,\n                compareCandleNotOk,\n                currentPivot\n            );\n        },\n        quickSort: quickSortDispatcher(dispatch),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ControlWindow);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DisplayWindow extends Component {\n    constructor(props){\n        super(props);\n\n        this.color = this.color.bind(this);\n    }\n\n    color(indx) {\n        switch(this.props.currentAlgo){\n\n            case \"bubbleSort\":\n                if (indx >= this.props.bubbleSort.sortedCandle) {\n                    return \"blue\";\n                } else if (\n                    indx === this.props.bubbleSort.compareCandleNotOk[0] ||\n                    indx === this.props.bubbleSort.compareCandleNotOk[1]\n                ) {\n                    return \"red\";\n                } else if (indx === this.props.bubbleSort.compareCandleOk[0] || indx === this.props.bubbleSort.compareCandleOk[1]) {\n                    return \"green\";\n                } else if (indx === this.props.bubbleSort.compareCandle[0] || indx === this.props.bubbleSort.compareCandle[1]) {\n                    return \"DodgerBlue\";\n                } else return \"DarkSlateGray\";\n            \n            case \"selectionSort\":\n                if (indx <= this.props.selectionSort.sortedCandle) {\n                    return \"blue\";\n                } else if (\n                    indx === this.props.selectionSort.compareCandleNotOk[0] ||\n                    indx === this.props.selectionSort.compareCandleNotOk[1]\n                ) {\n                    return \"red\";\n                } else if (indx === this.props.selectionSort.compareCandleOk[0] || indx === this.props.selectionSort.compareCandleOk[1]) {\n                    return \"green\";\n                } else if (indx === this.props.selectionSort.compareCandle[0] || indx === this.props.selectionSort.compareCandle[1]) {\n                    return \"DodgerBlue\";\n                } else return \"DarkSlateGray\";\n\n            case \"insertionSort\":\n                if (indx === this.props.insertionSort.compareCandleOk[0] || indx === this.props.insertionSort.compareCandleOk[1]) {\n                    return \"green\";\n                } else if (\n                    indx === this.props.insertionSort.compareCandleNotOk[0] ||\n                    indx === this.props.insertionSort.compareCandleNotOk[1]\n                ){\n                    return \"red\";\n                } else if (indx <= this.props.insertionSort.sortedCandle) {\n                    return \"blue\";\n                } else if (indx === this.props.insertionSort.compareCandle[0] || indx === this.props.insertionSort.compareCandle[1]) {\n                    return \"DodgerBlue\";\n                } else return \"DarkSlateGray\";\n\n            case \"mergeSort\":\n                if (indx === this.props.mergeSort.compareCandleOk[0] || indx === this.props.mergeSort.compareCandleOk[1]) {\n                    return \"green\";\n                } else if (\n                    indx === this.props.mergeSort.compareCandleNotOk[0] ||\n                    indx === this.props.mergeSort.compareCandleNotOk[1]\n                ){\n                    return \"red\";\n                } else if (indx <= this.props.mergeSort.sortedCandle) {\n                    return \"blue\";\n                } else if (indx >= this.props.mergeSort.compareCandle[0] && indx <= this.props.mergeSort.compareCandle[1]) {\n                    return \"DodgerBlue\";\n                } else return \"DarkSlateGray\";\n\n            case \"quickSort\":\n                if(indx===this.props.quickSort.currentPivot){\n                    return \"violet\";\n                }\n                else if (indx === this.props.quickSort.compareCandleOk[0] || indx === this.props.quickSort.compareCandleOk[1]) {\n                    return \"green\";\n                } else if (\n                    indx === this.props.quickSort.compareCandleNotOk[0] ||\n                    indx === this.props.quickSort.compareCandleNotOk[1]\n                ){\n                    return \"red\";\n                } else if (indx <= this.props.quickSort.sortedCandle) {\n                    return \"blue\";\n                } else if (indx === this.props.quickSort.compareCandle[0] || indx === this.props.quickSort.compareCandle[1]) {\n                    return \"DodgerBlue\";\n                } else return \"DarkSlateGray\";\n\n            default:\n                return \"DarkSlateGray\";\n        }\n    }\n\n    render() {\n        const candleArr = this.props.arr.map((element,indx)=>{\n            const s = {\n                height: `${element}px`,\n                width: `${500 / this.props.arr.length}px`,\n                backgroundColor: `${this.color(indx)}`,\n            }\n            return (\n                <div className='candle' style={s} key={indx}></div>\n            )\n        })\n        return (\n            <div className=\"DisplayWindow\">\n                <div className='candles'>\n                    {candleArr}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        arr: state.arrayReducer.arr,\n        currentAlgo: state.arrayReducer.currentAlgo,\n\n        bubbleSort: {\n            compareCandle: state.bubbleReducer.compareCandle,\n            compareCandleOk: state.bubbleReducer.compareCandleOk,\n            compareCandleNotOk: state.bubbleReducer.compareCandleNotOk,\n            sortedCandle: state.bubbleReducer.sortedCandle,\n        },\n\n        selectionSort: {\n            compareCandle: state.selectionReducer.compareCandle,\n            compareCandleOk: state.selectionReducer.compareCandleOk,\n            compareCandleNotOk: state.selectionReducer.compareCandleNotOk,\n            sortedCandle: state.selectionReducer.sortedCandle,\n        },\n\n        insertionSort: {\n            compareCandle: state.insertionReducer.compareCandle,\n            compareCandleOk: state.insertionReducer.compareCandleOk,\n            compareCandleNotOk: state.insertionReducer.compareCandleNotOk,\n            sortedCandle: state.insertionReducer.sortedCandle,\n        },\n\n        mergeSort: {\n            compareCandle: state.mergeReducer.compareCandle,\n            compareCandleOk: state.mergeReducer.compareCandleOk,\n            compareCandleNotOk: state.mergeReducer.compareCandleNotOk,\n            sortedCandle: state.mergeReducer.sortedCandle,\n        },\n\n        quickSort: {\n            compareCandle: state.quickReducer.compareCandle,\n            compareCandleOk: state.quickReducer.compareCandleOk,\n            compareCandleNotOk: state.quickReducer.compareCandleNotOk,\n            sortedCandle: state.quickReducer.sortedCandle,\n            currentPivot: state.quickReducer.currentPivot,\n        }\n    }\n}\n\nexport default connect(mapStateToProps,null)(DisplayWindow);","import React, { Component } from \"react\";\n\n//Importing all components\nimport ControlWindow from './ControlWindow';\nimport DisplayWindow from './DisplayWindow';\n\nexport default class MainComponent extends Component{\n    render(){\n        return (\n            <div>\n                <ControlWindow/>\n                <DisplayWindow/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\n//Importing css\nimport \"./styles/App.css\";\n\n//Importing store\nimport store from \"./redux/store\";\n\n//Importing Main Component\nimport MainComponent from \"./components/MainComponent\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <MainComponent />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}